@model CapaPresentacionAdmin.Models.OrdenProduccion

@{
    ViewBag.Title = "Inspeccionar";
    Layout = "~/Views/Shared/_LayoutCalidad.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>Inspeccion de Calzado</title>
    <style>
        .op-label {
            width: 120px;
            float: left;
            font-weight: bold;
        }

        .op-value {
            float: left;
        }

        #horas-container {
            display: flex;
            flex-wrap: wrap;
        }

        .btn-hora {
            display: inline-block;
            width: 100px;
            margin-right: 25px;
        }

        .pares-primera-value {
            display: inline-block;
            width: 30px;
            height: 30px;
            line-height: 30px;
            text-align: center;
            background-color: #f2f2f2;
            border-radius: 5px;
        }

        .cantidad-defecto {
            display: inline-block;
            width: 30px;
            height: 30px;
            line-height: 30px;
            text-align: center;
            background-color: #f2f2f2;
            border-radius: 5px;
        }
    </style>
</head>

<body>

    <div class="container" style="text-align: center">
        <div class="op-container">
            <br />
            <h4>Datos de OP</h4>
            <div class="op-row">
                <div class="op-label">OP N°:</div>
                <div class="op-value">@Model.NumeroOP</div>
            </div>
            <div class="op-row">
                <div class="op-label">Línea:</div>
                <div class="op-value">@Model.NumeroLinea</div>
            </div>
            <div class="op-row">
                <div class="op-label">Modelo:</div>
                <div class="op-value">@Model.Modelo.Denominacion</div>
            </div>
            <div class="op-row">
                <div class="op-label">Color:</div>
                <div class="op-value">@Model.Color.Descripcion</div>
            </div>
            <div class="op-row">
                <div class="op-label">Fecha:</div>
                <div class="op-value">@DateTime.Now.ToString("yyyy-MM-dd")</div>
            </div>
            <div class="op-row">
                <div class="op-label">Turno:</div>
                <div class="op-value">@Model.JornadaLaboral.Turno.Descripcion</div>
            </div>
        </div>

        <br />
        <br />
        <!--Elemento HTML para las horas-->
        <div id="horas-container"></div>

        <hr />
        <div>
            Pares de primera:
            <button id="decrementar" class="btn btn-danger mr-5" style="width: 40px">-</button>
            <span id="pares-primera" class="pares-primera-value"> 0 </span>
            <button id="incrementar" class="btn btn-success ml-5">+</button>
        </div>
    </div>
    <hr />
    <div class="container">
        <div class="row justify-content-center text-center">
            <div class="col-6">
                <button id="observados" class="btn btn-primary">Defectos Observados</button>
            </div>

            <div class="col-6">
                <button id="reproceso" class="btn btn-primary">Defectos de Reproceso</button>
            </div>
        </div>
        <br />
        <div class="row justify-content-center">
            <div class="col-6">
                <div class="list-group justify-content-center">
                    <div class="list-group-item list-group-item-action active text-center bg-secondary border-0">Pie Izquierdo</div>
                    <ul id="defectos-container-izq" class="list-group text-center"></ul>
                </div>
            </div>
            <div class="col-6">
                <div class="list-group justify-content-center">
                    <div class="list-group-item list-group-item-action active text-center bg-secondary border-0">Pie Derecho</div>
                    <ul id="defectos-container-der" class="list-group text-center"></ul>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="container" style="text-align: center">
        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-danger" onclick="window.location.href='@Url.Action("Index","Calidad")'"><i class="fas fa-times"></i> Cancelar Inspección</button>
            </div>
            <div class="col-md-6">
                <button class="btn btn-success" id="confirmar-registro"><i class="fas fa-check"></i> Confirmar Registro</button>
            </div>
        </div>
    </div>
</body>
</html>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    @*Traer horas del turno actual*@
    <script>
        $(document).ready(function () {
            $.ajax({
                url: "/Calidad/HorasTurnoActual",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (index, value) {
                        var horaArray = value.split(":");
                        var hora = new Date();
                        hora.setHours(parseInt(horaArray[0]));
                        hora.setMinutes(parseInt(horaArray[1]));
                        // Se formatea la hora en formato hh:mm
                        var horaFormateada = ('0' + hora.getHours()).slice(-2) + ':' + ('0' + hora.getMinutes()).slice(-2);
                        // Se crea un botón con el identificador de hora
                        var horaButton = $('<button/>').addClass('btn btn-outline-secondary btn-hora').text(horaFormateada).attr('id', hora.getHours());
                        $('#horas-container').append(horaButton);
                    });

                    // Recorrer todos los botones de hora y asignar un controlador de eventos a cada uno
                    for (var i = 1; i <= 24; i++) {
                        // Construir el selector del botón
                        var selector = '#hora-' + i;

                        // Asignar el controlador de eventos
                        $(selector).on('click', function () {
                            // Obtener la horaId a partir del ID del botón
                            var horaId = $(this).attr('id').split('-')[1];

                            localStorage.removeItem("pares-primera");
                            localStorage.removeItem(defecto.descripcion + "-" + pie);
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error al obtener las horas de turno: " + error);
                }
            });
        });
    </script>
    @*Incrementar y decrementar pares de primera*@
    <script>
        $(document).ready(function () {
            var paresPrimeraElement = $('#pares-primera');
            // Cargar la cantidad de pares de primera guardada en la memoria cache
            var paresPrimera = parseInt(localStorage.getItem("pares-primera")) || 0;

            // Función para actualizar el número de pares de primera y guardar la cantidad en la memoria cache
            function actualizarParesPrimera() {
                paresPrimeraElement.text(paresPrimera);
                // Guardar la cantidad de pares de primera en la memoria cache
                localStorage.setItem("pares-primera", paresPrimera);
            }

            // Función para decrementar el número de pares de primera
            function decrementarParesPrimera() {
                if (paresPrimera > 0) {
                    paresPrimera--;
                    actualizarParesPrimera();
                }
            }

            // Función para incrementar el número de pares de primera
            function incrementarParesPrimera() {
                paresPrimera++;
                actualizarParesPrimera();
            }

            // Asignar eventos a los botones
            $('#decrementar').click(decrementarParesPrimera);
            $('#incrementar').click(incrementarParesPrimera);

            // Mostrar la cantidad de pares de primera guardada en la memoria cache al cargar la página
            actualizarParesPrimera();
        });
    </script>

    @*Incrementar y decrementar defectos encontrados*@
    <script>
        $(document).ready(function () {
            // Función para crear un elemento de defecto con botones para manipular la cantidad
            function crearElementoDefecto(defecto, pie) {

                // Crear un elemento de lista
                var defectoElement = $("<li>").addClass("list-group-item");
                // Crear un elemento de texto con el nombre del defecto
                var nombreDefectoElement = $("<span>").text(defecto.descripcion);
                // Crear un elemento de texto con la cantidad de defectos
                var cantidadDefectoElement = $("<span>").addClass("cantidad-defecto").text("0");

                // Verificar si ya hay una cantidad guardada en la memoria cache para este defecto y pie
                var cantidadGuardada = localStorage.getItem(defecto.descripcion + "-" + pie);

                if (cantidadGuardada !== null) {
                    cantidadDefectoElement.text(cantidadGuardada);
                }

                //crear botones para incrementar y decrementar
                var decrementarBtn = $("<button>").addClass("btn btn-sm btn-danger").text("-");
                var incrementarBtn = $("<button>").addClass("btn btn-sm btn-success").text("+");

                // Función para decrementar el número de un defecto
                decrementarBtn.click(function () {
                    var cantidad = parseInt(cantidadDefectoElement.text());
                    if (cantidad > 0) {
                        cantidad--;
                        cantidadDefectoElement.text(cantidad);
                        // Guardar la nueva cantidad en la memoria cache
                        localStorage.setItem(defecto.descripcion + "-" + pie, cantidad);
                    }
                });

                // Función para incrementar el número de un defecto
                incrementarBtn.click(function () {
                    var cantidad = parseInt(cantidadDefectoElement.text());
                    cantidad++;
                    cantidadDefectoElement.text(cantidad);
                    // Guardar la nueva cantidad en la memoria cache
                    localStorage.setItem(defecto.descripcion + "-" + pie, cantidad);
                });

                //Aspecto para los defectos
                defectoElement.append(nombreDefectoElement);
                defectoElement.append(": ");
                defectoElement.append(decrementarBtn);
                defectoElement.append(" ");
                defectoElement.append(cantidadDefectoElement);
                defectoElement.append(" ");
                defectoElement.append(incrementarBtn);

                return defectoElement;
            }

            // Función para hacer la petición POST y actualizar los contenedores de los pies
            function filtrarDefectos(tipo) {
                $.ajax({
                    type: "POST",
                    url: "/Calidad/ObtenerDefectos",
                    data: { tipo: tipo },
                    success: function (response) {
                        // Convertimos la lista de cadenas en una lista de elementos HTML
                        var itemsIzq = response.map(function (descripcion) {
                            var defecto = { descripcion: descripcion };
                            return crearElementoDefecto(defecto, "izq");
                        });
                        var itemsDer = response.map(function (descripcion) {
                            var defecto = { descripcion: descripcion };
                            return crearElementoDefecto(defecto, "der");
                        });

                        // Actualizamos el contenido de los contenedores de defectos con los elementos HTML
                        $("#defectos-container-izq").empty().append(itemsIzq);
                        $("#defectos-container-der").empty().append(itemsDer);
                    },
                    error: function () {
                        alert("Ocurrió un error al filtrar los defectos");
                    }
                });
            }

            // Manejador de eventos para el botón de defectos observados
            $("#observados").click(function () {
                filtrarDefectos("Observado");
            });

            // Manejador de eventos para el botón de defectos de reproceso
            $("#reproceso").click(function () {
                filtrarDefectos("Reproceso");
            });
        });
    </script>
}